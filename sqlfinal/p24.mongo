Design and Implement following query using MongoDB
1. Create a collection called ‘games’.
2. Add 5 games to the database. Give each document the following properties:
name, gametype, rating (out of 100)
3. Write a query that returns all the games
4. Write a query that returns the 3 highest rated games.
5. Update your two favourite games to have two achievements called ‘Game
Master’ and ‘Speed Demon’.
6. Write a query that returns all the games that have both the ‘Game Maser’ and
7. the ‘Speed Demon’ achievements.
8. Write a query that returns only games that have achievements
In MongoDB, you would work with collections and documents. Here's how you can design and implement the mentioned queries:

1. Create a collection called 'games':
   ```javascript
   db.createCollection('games')
   ```

2. Add 5 games to the collection with name, gametype, and rating properties:
   ```javascript
   db.games.insertMany([
       { name: 'Game1', gametype: 'Action', rating: 90 },
       { name: 'Game2', gametype: 'RPG', rating: 85 },
       { name: 'Game3', gametype: 'Sports', rating: 92 },
       { name: 'Game4', gametype: 'Puzzle', rating: 88 },
       { name: 'Game5', gametype: 'Adventure', rating: 89 }
   ])
   ```

3. Query to return all the games:
   ```javascript
   db.games.find({})
   ```

4. Query to return the 3 highest-rated games:
   ```javascript
   db.games.find().sort({ rating: -1 }).limit(3)
   ```

5. Update your two favorite games to have two achievements:
   ```javascript
   db.games.updateMany(
       { name: { $in: ['Game1', 'Game3'] } },
       { $set: { achievements: ['Game Master', 'Speed Demon'] }
   )
   ```

6. Query to return games with both 'Game Master' and 'Speed Demon' achievements:
   ```javascript
   db.games.find({ achievements: { $all: ['Game Master', 'Speed Demon'] } })
   ```

7. Query to return only games that have achievements:
   ```javascript
   db.games.find({ achievements: { $exists: true, $ne: [] } })
   ```

These MongoDB queries create a 'games' collection, insert data, and perform various queries as specified in your request.
